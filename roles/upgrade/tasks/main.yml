---
- name: get dce version
  uri:
    url: http://{{ groups['seed'][0] }}/dce/version
    method: GET
    user: "{{ vault_dce_user }}"
    password: "{{ vault_dce_password }}"
    force_basic_auth: yes
    return_content: yes
    timeout: 10
  register: WEBPAGE
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"
  ignore_errors: true

- fail: msg="already {{ dce_version }}"
  when: WEBPAGE.json.DCEVersion == dce_version 
  tags: fail_tag

- name: KUBELET_VERSION
  shell: kubelet --version 2>/dev/null
  register: kubelet_version
- set_fact: KUBELET_VERSION={{ kubelet_version.stdout }}

- name: HOST_HOSTNAME
  shell: hostname
  register: hostname
- set_fact: HOST_HOSTNAME={{ hostname.stdout }}

- name: SELINUX_MODE
  shell: sestatus | awk '{print $3}'
  register: selinux_mode
  ignore_errors: true
- set_fact: SELINUX_MODE={{ selinux_mode.stdout }}

- name: FIREWALLD_STATE
  shell: firewall-cmd --state 2>&1
  register: firewalld_state
  ignore_errors: true
- set_fact: FIREWALLD_STATE={{ firewalld_state.stdout }}

- name: clear dce-bootstrap
  shell: docker rm -f dce-bootstrap > /dev/null 2>&1
  ignore_errors: true

- name: upgrade dce {{ dce_version }}
  shell: >
         docker run 
         --name dce-bootstrap 
         --rm 
         -t 
         -v /var/run/docker.sock:/var/run/docker.sock 
         -v /etc/daocloud:/etc/daocloud 
         -v /var/local:/var/local 
         -e KUBELET_VERSION="{{ KUBELET_VERSION }}" 
         -e HOST_HOSTNAME="{{ HOST_HOSTNAME }}"  
         -e FIREWALLD_STATE="{{ FIREWALLD_STATE }}" 
         -e SELINUX_MODE="{{ SELINUX_MODE }}" 
         daocloud.io/daocloud/dce:{{ dce_version }} 
         do-upgrade --quiet
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"
  tags: upgrade
