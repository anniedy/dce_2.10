---
- name: get all cluster nodes
  uri:
    url: http://{{ groups['seed'][0] }}/nodes
    method: GET
    user: "{{ vault_dce_user }}"
    password: "{{ vault_dce_password }}"
    status_code: 200
    return_content: yes
  register: WEBPAGE
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"
  ignore_errors: true

- set_fact: 
    node_meta="{% for node in WEBPAGE.json %} 
                   {% if node.get('ManagerStatus') %}
                       {% if node['ManagerStatus']['Addr'].split(':')[0] == inventory_hostname %}
                           {{ node.ID }},{{ node.Spec.Role }},{{ node.Version.Index }}
                       {% endif %}
                   {% else %}
                       {% if node['Status']['Addr'] == inventory_hostname %}
                           {{ node.ID }},{{ node.Spec.Role }},{{ node.Version.Index }}
                       {% endif %}
                   {% endif %}
               {% endfor %}"

- set_fact: 
    node_id="{{ node_meta.strip().split(',')[0] }}"
    node_role="{{ node_meta.strip().split(',')[1] }}"
    node_version="{{ node_meta.strip().split(',')[2] }}"

- name: demote {{ inventory_hostname }}
  uri:
    url: http://{{ groups['seed'][0] }}/nodes/{{ node_id }}/update?version={{ node_version }}
    method: POST
    body: {"Availability": "active", "Role": "worker"}
    body_format: json
    user: "{{ vault_dce_user }}"
    password: "{{ vault_dce_password }}"
    status_code: 200
    return_content: yes
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"
  when: node_role == 'manager'

- name: clear dce-bootstrap
  shell: docker rm -f dce-bootstrap > /dev/null 2>&1
  ignore_errors: true

- name: dce uninstall
  shell: docker run --name dce-bootstrap --rm -t -v /var/run/docker.sock:/var/run/docker.sock -v /etc/daocloud:/etc/daocloud -v /var/local:/var/local --network host {{ DCE_HUB_PREFIX }}/dce:{{ dce_version }} do-uninstall --force --quiet && sleep 10
  tags: dce_uninstall

- name: rm {{ inventory_hostname }}
  uri:
    url: http://{{ groups['seed'][0] }}/nodes/{{ node_id }}
    method: DELETE
    user: "{{ vault_dce_user }}"
    password: "{{ vault_dce_password }}"
    status_code: 200
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"

- name: stop the kubelet service
  service: 
    name: kubelet 
    state: stopped 
    enabled: no
  ignore_errors: true
