---
- name: SUBNET_172_STATE
  shell: SUBNET_172_STATE=$(ip route | grep -v -E "(docker|br-)" | grep -cE "^172\.1[6-9]" | awk '{if($1 != 0){print "confliction"}else{print "no_confliction"}}') ; [[ $SUBNET_172_STATE = confliction ]]|| grep -cE "nameserver\s+172\.1[6-9]" /etc/resolv.conf|awk '{if($1 != 0){print "confliction"}else{print "no_confliction"}}'
  register: subnet_172_state
- set_fact: SUBNET_172_STATE={{ subnet_172_state.stdout }}

- name: SUBNET_10_STATE
  shell: SUBNET_10_STATE=$(ip route | grep -v -E "(docker|br-)" | grep -E "^10\.255" | awk '{if($1 != 0){print "confliction"}else{print "no_confliction"}}') ; [[ $SUBNET_10_STATE = confliction ]]|| grep -cE "^nameserver\s+10\.255" /etc/resolv.conf|awk '{if($1 != 0){print "confliction"}else{print "no_confliction"}}'
  register: subnet_10_state
- set_fact: SUBNET_10_STATE={{ subnet_10_state.stdout }}

- name: KUBELET_VERSION
  shell: kubelet --version 2>/dev/null
  register: kubelet_version
- set_fact: KUBELET_VERSION={{ kubelet_version.stdout }}

- name: HOST_HOSTNAME
  shell: hostname
  register: hostname
- set_fact: HOST_HOSTNAME={{ hostname.stdout }}

- name: SELINUX_MODE
  shell: sestatus 2>/dev/null | grep "Current mode" | awk '{print $3}'
  register: selinux_mode
  ignore_errors: true
- set_fact: SELINUX_MODE={{ selinux_mode.stdout }}

- name: FIREWALLD_STATE
  shell: firewall-cmd --state 2>/dev/null | sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'
  register: firewalld_state
  ignore_errors: true
- set_fact: FIREWALLD_STATE={{ firewalld_state.stdout }}

- name: "{{ inventory_hostname }} in cluster ?"
  uri:
    url: http://{{ groups['seed'][0] }}/nodes
    method: GET
    user: "{{ vault_dce_user }}"
    password: "{{ vault_dce_password }}"
    force_basic_auth: yes
    return_content: yes
    timeout: 10
  register: WEBPAGE
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"
  ignore_errors: true

- name: clear dce-bootstrap
  shell: docker rm -f dce-bootstrap > /dev/null 2>&1
  when: not WEBPAGE.content is search(inventory_hostname)
  ignore_errors: true

- name: init cluster
  shell: > 
         docker run 
         --name dce-bootstrap 
         --rm 
         -t 
         -v /var/run/docker.sock:/var/run/docker.sock 
         -v /etc/daocloud:/etc/daocloud 
         -v /var/local:/var/local 
         -e SUBNET_172_STATE="{{ SUBNET_172_STATE }}" 
         -e SUBNET_10_STATE="{{ SUBNET_10_STATE }}" 
         -e KUBELET_VERSION="{{ KUBELET_VERSION }}" 
         -e HOST_HOSTNAME="{{ HOST_HOSTNAME }}" 
         -e FIREWALLD_STATE="{{ FIREWALLD_STATE }}" 
         -e SELINUX_MODE="{{ SELINUX_MODE }}" 
         -e HUB_PREFIX={{ DCE_HUB_PREFIX }} {{ DCE_HUB_PREFIX }}/dce:{{ dce_version }} 
         do-install --quiet --advertise-addr {{ inventory_hostname }} --pod-cluster-cidr {{ NETWORK_POD_CLUSTER_CIDR }} --service-cluster-ip-range {{ NETWORK_SERVICE_CLUSTER_IP_RANGE }} --service-node-port-range {{ NETWORK_SERVICE_NODE_PORT_RANGE }} --network-driver {{ NETWORK_DRIVER }}
  register: result
  until: result.stdout.find('DCE Controller Installed Successfully') != -1
  retries: "{{ RETRIES }}"
  delay: "{{ DELAY }}"
  when: (not WEBPAGE.content is search(inventory_hostname))
  
